# Generated by Django 3.2.15 on 2022-08-16 23:47

from django.db import migrations, models
import django.db.models.deletion
import nautobot.dcim.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('dcim', '0014_location_status_data_migration'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='cable',
            options={},
        ),
        migrations.RemoveField(
            model_name='consoleport',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='consoleport',
            name='_cable_peer_type',
        ),
        migrations.RemoveField(
            model_name='consoleserverport',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='consoleserverport',
            name='_cable_peer_type',
        ),
        migrations.RemoveField(
            model_name='frontport',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='frontport',
            name='_cable_peer_type',
        ),
        migrations.RemoveField(
            model_name='interface',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='interface',
            name='_cable_peer_type',
        ),
        migrations.RemoveField(
            model_name='powerfeed',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='powerfeed',
            name='_cable_peer_type',
        ),
        migrations.RemoveField(
            model_name='poweroutlet',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='poweroutlet',
            name='_cable_peer_type',
        ),
        migrations.RemoveField(
            model_name='powerport',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='powerport',
            name='_cable_peer_type',
        ),
        migrations.RemoveField(
            model_name='rearport',
            name='_cable_peer_id',
        ),
        migrations.RemoveField(
            model_name='rearport',
            name='_cable_peer_type',
        ),
        migrations.AddField(
            model_name='cablepath',
            name='_nodes',
            field=nautobot.dcim.fields.JSONPathField(base_field=models.CharField(max_length=40), default=()),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='cablepath',
            name='is_complete',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='consoleport',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AddField(
            model_name='consoleserverport',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AddField(
            model_name='frontport',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AddField(
            model_name='interface',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AddField(
            model_name='powerfeed',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AddField(
            model_name='poweroutlet',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AddField(
            model_name='powerport',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AddField(
            model_name='rearport',
            name='cable_side',
            field=models.CharField(blank=True, max_length=1),
        ),
        migrations.AlterField(
            model_name='cablepath',
            name='path',
            field=models.JSONField(default=list),
        ),
        migrations.AlterUniqueTogether(
            name='cable',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='cablepath',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='cable',
            name='_termination_a_device',
        ),
        migrations.RemoveField(
            model_name='cable',
            name='_termination_b_device',
        ),
        migrations.RemoveField(
            model_name='cable',
            name='termination_a_id',
        ),
        migrations.RemoveField(
            model_name='cable',
            name='termination_a_type',
        ),
        migrations.RemoveField(
            model_name='cable',
            name='termination_b_id',
        ),
        migrations.RemoveField(
            model_name='cable',
            name='termination_b_type',
        ),
        migrations.RemoveField(
            model_name='cablepath',
            name='destination_id',
        ),
        migrations.RemoveField(
            model_name='cablepath',
            name='destination_type',
        ),
        migrations.RemoveField(
            model_name='cablepath',
            name='origin_id',
        ),
        migrations.RemoveField(
            model_name='cablepath',
            name='origin_type',
        ),
        migrations.CreateModel(
            name='CableEndpoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('cable_side', models.CharField(max_length=1)),
                ('termination_id', models.UUIDField()),
                ('_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcim.device')),
                ('cable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endpoints', to='dcim.cable')),
                ('termination_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(models.Q(('app_label', 'circuits'), ('model__in', ('circuittermination',))), models.Q(('app_label', 'dcim'), ('model__in', ('consoleport', 'consoleserverport', 'frontport', 'interface', 'powerfeed', 'poweroutlet', 'powerport', 'rearport'))), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ('cable', 'cable_side'),
                'unique_together': {('termination_type', 'termination_id')},
            },
        ),
    ]
